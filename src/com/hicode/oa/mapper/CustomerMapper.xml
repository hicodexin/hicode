<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hicode.oa.dao.CustomerDAO">
	<resultMap id="getCustomer_oop" type="Customer">
		<association property="auditions" column="au_id" select="com.hicode.oa.dao.AuditionsDAO.getAudNameByID">
		</association>
		<association property="subject" column="sub_id" select="com.hicode.oa.dao.SubjectDAO.getSubjectByID">
		</association>
		<association property="teacher" column="t_id" select="com.hicode.oa.dao.TeacherDAO.getTeacherByID">
		</association> 
		<association property="adviser" column="adv_id" select="com.hicode.oa.dao.AdviserDAO.getAdviserByID">
		</association> 
	</resultMap>
	
	<sql id="all_column">
		 er_id, au_id,sub_id,period,money,giveClass,adv_id,if_renewal,t_id,first_time,if_done,if_refund,remarks
	</sql>
	
	<select id="getCustomerByID" parameterType="java.lang.Integer" resultMap="getCustomer_oop">
		select <include refid="all_column"></include> from customer where er_id = #{er_id};
	</select>
	
	<select id="getCustomerAll" parameterType="java.util.Map" resultMap="getCustomer_oop">
		select <include refid="all_column"></include> from customer limit #{start},#{count};
	</select>
	<!-- 获取表中数据条数 -->
	<select id="getCustomerForCount" resultType="java.lang.Integer">
		select count(1) from customer;
	</select>
	
	<select id="getCustomerBySomeOption" parameterType="java.util.Map" resultMap="getCustomer_oop">
	<!--stu_name,stu_subject,stu_period,stu_teacher,kai_time,ting_time,qian_gu ,if_xufei -->
		SELECT <include refid="all_column"></include> FROM customer 
		WHERE 1=1
		
			<if test="stu_name != null">
				AND au_id in
					(SELECT t2.au_id FROM auditions t2 WHERE t2.st_name LIKE #{stu_name} )
			</if>
			
			<if test="stu_subject != null">
				AND sub_id = #{stu_subject}
			</if>
			
			<if test="stu_period != null">
				AND period = #{stu_period}
			</if>
			
			<if test="stu_teacher != null">
				AND t_id = #{stu_teacher}
			</if>
			
		    <if test="kai_time != null">
		   		 AND first_time &gt;= #{kai_time}
		    </if>
		
			<if test="ting_time != null">
				AND first_time &lt;= #{ting_time}
			</if>
			
			<if test="qian_gu != null">
				AND adv_id = #{qian_gu}
			</if>
			
			<if test="if_xufei != null">
				AND if_renewal = #{if_xufei}
			</if>
		ORDER BY first_time
		limit #{start},#{count};
	</select>
	
	<select id="getCustomerForCountBySomeOption" parameterType="java.util.Map"  resultType="java.lang.Integer">
	<!--stu_name,stu_subject,stu_period,stu_teacher,kai_time,ting_time,qian_gu ,if_xufei -->
		SELECT count(1) FROM customer 
		WHERE 1=1
		
			<if test="stu_name != null">
				AND au_id in
					(SELECT t2.au_id FROM auditions t2 WHERE t2.st_name LIKE #{stu_name} )
			</if>
			
			<if test="stu_subject != null">
				AND sub_id = #{stu_subject}
			</if>
			
			<if test="stu_period != null">
				AND period = #{stu_period}
			</if>
			
			<if test="stu_teacher != null">
				AND t_id = #{stu_teacher}
			</if>
			
		    <if test="kai_time != null">
		   		 AND first_time &gt;= #{kai_time}
		    </if>
		
			<if test="ting_time != null">
				AND first_time &lt;= #{ting_time}
			</if>
			
			<if test="qian_gu != null">
				AND adv_id = #{qian_gu}
			</if>
			
			<if test="if_xufei != null">
				AND if_renewal = #{if_xufei}
			</if>
		ORDER BY first_time
		limit #{start},#{count};
	</select>
	
	
	<!-- 添加签单学员 -->
	<insert id="do_insertCustomer" parameterType="Customer" keyProperty="er_id">
		insert into customer
			(au_id,sub_id,period,money,giveClass,adv_id,if_renewal,t_id,first_time,if_done,if_refund,remarks) 
		values(
				#{auditions.au_id},
				#{subject.sub_id},
				#{period},
				#{money},
				#{giveClass},
				#{adviser.adv_id},
				#{if_renewal},
				#{teacher.t_id},
				#{first_time},
				#{if_done},
				#{if_refund},
				#{remarks}
			);
	</insert>
	
	<update id="do_updateCustomer" parameterType="Customer" >
		update customer set 
			au_id=#{auditions.au_id},sub_id=#{subject.sub_id},period=#{period},
			money=#{money},giveClass=#{giveClass},
			adv_id=#{adviser.adv_id},if_renewal=#{if_renewal},
			t_id=#{teacher.t_id},first_time=#{first_time},if_done=#{if_done},
			if_refund=#{if_refund},remarks=#{remarks}
		where er_id=#{er_id};
	</update>
	
	<!-- 修改备注信息 -->
	<update id="do_updateCustomerRemarks" parameterType="Customer" >
		update customer set 
			remarks=#{remarks}
		where er_id=#{er_id};
	</update>
	
	
	
</mapper>


